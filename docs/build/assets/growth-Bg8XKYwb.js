const z="GROWTH",d=`
[Hold] Growth
`,p=[],a={theme:"pixel",viewSize:{x:200,y:70},isPlayingBgm:!0,isReplayEnabled:!0,audioSeed:1};let e,r,t;const s=60;function u(){ticks||(e={x:9,vx:1,size:5},r=[],t=0);let l=e.x>9?(e.x-9)*.5:0;if(color("light_blue"),rect(0,s,200,10),input.isJustPressed&&play("laser"),e.size+=((input.isPressed?50:5)-e.size)*clamp(e.vx,1,999)*.01,e.vx+=(15/e.size-1)*.02*sqrt(difficulty),e.x+=e.vx-l,e.x+e.size/2<1&&end(),color("yellow"),rect(0,s,e.x+e.size/2,-e.size),t-=l,t<0){let i=rnd()<.8?3:rnd(5)*rnd(5)+3;i<7&&(i=3),r.push({x:400,size:i}),t+=rnd(30,50)}remove(r,i=>{i.x-=l,color(i.size>e.size?"red":"cyan");const o=i.x>100?(i.x-100)/300+1:1,c=i.size/o;if(rect(i.x/o,s,c,-c).isColliding.rect.yellow){if(i.size>e.size)play("explosion"),end();else{play(i.size<5?"hit":"powerUp");const n=sqrt(i.size);particle(i.x,s-i.size/2,n,n,0,PI/2),addScore(ceil(clamp(e.vx,1,999)*i.size),i.x,s-e.size)}return!0}})}export{p as characters,d as description,a as options,z as title,u as update};
